USE [League_of_Legends_V2]
GO

/****** Object:  StoredProcedure [dbo].[uspPopulate_Match_Roles]    Script Date: 04/05/2024 17:53:48 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[uspPopulate_Match_Roles] AS 

SELECT DISTINCT
	matchId,
	DENSE_RANK() OVER (ORDER BY matchId) AS MatchNumber
	INTO #MatchList
	FROM [dbo].[Match_Details]
	WHERE eligibleForProgression = 1 
	AND gameEndedInEarlySurrender = 0 
	AND gameLength >= 15*60
	AND matchId NOT IN (SELECT DISTINCT matchId FROM [dbo].[Match_Roles])


SET NOCOUNT ON;
DECLARE @Max INT
DECLARE @Counter INT = 1
DECLARE @MissingRoles INT = 0
DECLARE @MatchId NVARCHAR(MAX) 
DECLARE @PrintMessage NVARCHAR(MAX) 
CREATE TABLE #RoleAssignment  (
	[matchId] [nvarchar](30) NOT NULL,
	[teamId] [nvarchar](30) NOT NULL,
	PerfectMatch [nvarchar](30) NULL,
	RoughMatch [nvarchar](30) NULL,
	[championName] [nvarchar](30) NOT NULL,
	[summonerId] [nvarchar](60) NOT NULL)

CREATE INDEX matchId_summonerId ON #RoleAssignment (matchid,summonerid)

CREATE TABLE #AssignedRoles  (
	[Team] [nvarchar](100) NOT NULL,
	[Position] [nvarchar](100) NOT NULL,
	[summonerId] [nvarchar](60) NULL)


SELECT
	@Max = MAX(MatchNumber)
	FROM #MatchList

WHILE @Max >= @Counter
BEGIN

INSERT INTO #RoleAssignment
SELECT 
	#1.matchId,
	teamId,
	--lane,
	--teamPosition,
	--individualPosition,
	CASE WHEN lane IN ('TOP','NONE') AND teamPosition = 'TOP' AND individualPosition = 'TOP' THEN 'TOP'
		 WHEN lane IN ('JUNGLE','NONE') AND teamPosition = 'JUNGLE' AND individualPosition = 'JUNGLE' THEN 'JUNGLE'
		 WHEN lane IN ('MIDDLE','NONE') AND teamPosition = 'MIDDLE' AND individualPosition = 'MIDDLE' THEN 'MIDDLE'
		 WHEN lane IN ('BOTTOM','NONE') AND teamPosition = 'BOTTOM' AND individualPosition = 'BOTTOM' THEN 'BOTTOM'
		 WHEN lane IN ('BOTTOM','NONE') AND teamPosition = 'UTILITY' AND individualPosition = 'UTILITY' THEN 'SUPPORT'
		 WHEN teamPosition = 'TOP' AND individualPosition = 'TOP' THEN 'TOP'
		 WHEN teamPosition = 'JUNGLE' AND individualPosition = 'JUNGLE' THEN 'JUNGLE'
		 WHEN teamPosition = 'MIDDLE' AND individualPosition = 'MIDDLE' THEN 'MIDDLE'
		 WHEN teamPosition = 'BOTTOM' AND individualPosition = 'BOTTOM' THEN 'BOTTOM'
		 WHEN teamPosition = 'UTILITY' AND individualPosition = 'UTILITY' THEN 'SUPPORT'
		 END AS PerfectMatch,
	CASE WHEN lane IN ('TOP','NONE') AND teamPosition = 'TOP' 
		   OR teamPosition = 'TOP' AND individualPosition = 'TOP' 
		   OR lane IN ('TOP','NONE') AND individualPosition = 'TOP' THEN 'TOP'
		 WHEN lane IN ('JUNGLE','NONE') AND teamPosition = 'JUNGLE' 
		   OR teamPosition = 'JUNGLE' AND individualPosition = 'JUNGLE' 
		   OR lane IN ('JUNGLE','NONE') AND individualPosition = 'JUNGLE' THEN 'JUNGLE'
		 WHEN lane IN ('MIDDLE','NONE') AND teamPosition = 'MIDDLE' 
		   OR teamPosition = 'MIDDLE' AND individualPosition = 'MIDDLE' 
		   OR lane IN ('MIDDLE','NONE') AND individualPosition = 'MIDDLE' THEN 'MIDDLE'
		 WHEN lane IN ('BOTTOM','NONE') AND teamPosition = 'BOTTOM' 
		   OR teamPosition = 'BOTTOM' AND individualPosition = 'BOTTOM' 
		   OR lane IN ('BOTTOM','NONE') AND individualPosition = 'BOTTOM' THEN 'BOTTOM'
		 WHEN lane IN ('BOTTOM','NONE') AND teamPosition = 'UTILITY' 
		   OR teamPosition = 'UTILITY' AND individualPosition = 'UTILITY' 
		   OR lane IN ('BOTTOM','NONE') AND individualPosition = 'UTILITY' THEN 'SUPPORT'
		   END AS RoughMatch, 
	championName,
	summonerId
  FROM [dbo].[Match_Details] #1
  INNER JOIN #MatchList #2
	ON #1.matchId = #2.matchId
  WHERE MatchNumber = @Counter
  --WHERE #1.MatchId = 'EUW1_6551530219'


SELECT TOP 1
	@MatchId = matchId
	FROM #RoleAssignment

INSERT INTO #AssignedRoles
SELECT
	Team,
	Position,
	summonerId
	FROM [ref].[Match_Layout] #1
	LEFT JOIN #RoleAssignment #2 
		ON #1.Position = #2.PerfectMatch
		AND #1.Team = #2.teamId

--100 Roles 1 NULL
SELECT
	@MissingRoles = SUM(CASE WHEN summonerId IS NULL THEN 1 ELSE 0 END)
	FROM #AssignedRoles
	WHERE Team = '100'

IF @MissingRoles = 1
BEGIN
UPDATE #AssignedRoles
SET 
	summonerId = #2.summonerId
	FROM #AssignedRoles #1
	INNER JOIN #RoleAssignment #2
		ON #1.Team = '100'
		AND #1.Team = #2.teamId
		AND ISNULL(#2.summonerId,'A') NOT IN (SELECT summonerId FROM #AssignedRoles WHERE summonerId IS NOT NULL)
		AND #1.summonerId IS NULL
END

--200 Roles 1 NULL
SELECT
	@MissingRoles = SUM(CASE WHEN summonerId IS NULL THEN 1 ELSE 0 END)
	FROM #AssignedRoles
	WHERE Team = '200'

IF @MissingRoles = 1
BEGIN
UPDATE #AssignedRoles
SET 
	summonerId = #2.summonerId
	FROM #AssignedRoles #1
	INNER JOIN #RoleAssignment #2
		ON #1.Team = '200'
		AND #1.Team = #2.teamId
		AND ISNULL(#2.summonerId,'A') NOT IN (SELECT summonerId FROM #AssignedRoles WHERE summonerId IS NOT NULL)
		AND #1.summonerId IS NULL

END

SELECT
	@MissingRoles = SUM(CASE WHEN summonerId IS NULL THEN 1 ELSE 0 END)
	FROM #AssignedRoles

IF @MissingRoles = 0
BEGIN
INSERT INTO [dbo].[Match_Roles]
SELECT 
	@MatchId AS matchId,
	#1.Team,
	#1.Position,
	#1.summonerId,
	#2.summonerId AS opponentId
  FROM #AssignedRoles #1
  INNER JOIN #AssignedRoles #2
	ON #1.Position = #2.Position
	AND #1.Team <> #2.Team
END
TRUNCATE TABLE #RoleAssignment
TRUNCATE TABLE #AssignedRoles
SET @PrintMessage = @Max - @Counter
RAISERROR(@PrintMessage,0,1) WITH NOWAIT
SET @Counter = @Counter + 1
SET @MissingRoles = 0
END

SET NOCOUNT OFF;
DELETE FROM [dbo].[Match_Roles]
WHERE matchId NOT IN (SELECT DISTINCT matchId FROM [dbo].[Match_Details])

;WITH _Error AS (SELECT 
	matchId, 
	summonerId, 
	COUNT(*) COUNT
  FROM [dbo].[Match_Roles]
  GROUP BY matchId, summonerId
  HAVING COUNT(*) <> 1)

DELETE FROM [dbo].[Match_Roles]
WHERE matchId IN (SELECT DISTINCT
	#1.matchId
	FROM [dbo].[Match_Roles] #1
	INNER JOIN _Error #2
		ON #1.matchId = #2.matchId)

DROP TABLE #MatchList
DROP TABLE #RoleAssignment
DROP TABLE #AssignedRoles
GO

/****** Object:  StoredProcedure [dbo].[uspPopulate_Summoner_Rank_Backup]    Script Date: 04/05/2024 17:53:48 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[uspPopulate_Summoner_Rank_Backup] AS
TRUNCATE TABLE [dbo].[Summoner_Rank_Backup]
INSERT INTO [dbo].[Summoner_Rank_Backup]
SELECT [leagueId]
      ,[queueType]
      ,[tier]
      ,[rank]
      ,[summonerId]
      ,[summonerName]
      ,[leaguePoints]
      ,[wins]
      ,[losses]
      ,[veteran]
      ,[inactive]
      ,[freshBlood]
      ,[hotStreak]
      ,[Region]
      ,[RowUpdateDateTime]
  FROM [dbo].[Summoner_Rank]
  WHERE CONVERT(DATE,[RowUpdateDateTime]) <> CONVERT(DATE,GETDATE())
GO

/****** Object:  StoredProcedure [dbo].[uspUpdate_Match_List]    Script Date: 04/05/2024 17:53:48 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[uspUpdate_Match_List]
@Build NVARCHAR(100) = NULL AS
SELECT 
	   [matchId]
      ,[puuid]
      ,[RowUpdateDateTime]
	  INTO #Temp
  FROM [dbo].[Match_List]
  WHERE 1=0
IF @Build = 'Run'
BEGIN
INSERT INTO #Temp
SELECT 
	   'A' [matchId]
      ,[puuid]
      ,MAX([RowUpdateDateTime]) [RowUpdateDateTime]
  FROM [dbo].[Match_List]
  WHERE [RowUpdateDateTime] >= DATEADD(MONTH,-2,CONVERT(DATE,GETDATE()))
  GROUP BY 
	   [puuid]
END
ELSE
BEGIN
INSERT INTO #Temp
SELECT 
	   [matchId]
      ,[puuid]
      ,MAX([RowUpdateDateTime]) [RowUpdateDateTime]
  FROM [dbo].[Match_List]
  WHERE [RowUpdateDateTime] >= DATEADD(MONTH,-2,CONVERT(DATE,GETDATE()))
  AND matchId NOT IN (SELECT DISTINCT matchId FROM dbo.Match_Details)
  AND matchId <> 'A'
  GROUP BY 
	   [matchId]
      ,[puuid]
  UNION ALL
  SELECT 
	   'A' [matchId]
      ,[puuid]
      ,MAX([RowUpdateDateTime]) [RowUpdateDateTime]
  FROM [dbo].[Match_List]
  WHERE [RowUpdateDateTime] >= DATEADD(MONTH,-2,CONVERT(DATE,GETDATE()))
  GROUP BY 
	   [puuid]
END

TRUNCATE TABLE [dbo].[Match_List]
INSERT INTO [dbo].[Match_List]
SELECT 
	*
  FROM #Temp

DROP TABLE #Temp
GO

/****** Object:  StoredProcedure [ref].[uspPopulate_Lu_Runes_Shards]    Script Date: 04/05/2024 17:53:48 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



CREATE PROCEDURE [ref].[uspPopulate_Lu_Runes_Shards] AS

DELETE FROM [ref].[Lu_Runes]
WHERE id IN ('5005','5008','5003','5002','5007','5001')

INSERT INTO [ref].[Lu_Runes] VALUES 
('5005','Shard - AS','Attack Speed') --Definite
INSERT INTO [ref].[Lu_Runes] VALUES 
('5008','Shard - AD','Adaptive Damage') --Definite
INSERT INTO [ref].[Lu_Runes] VALUES 
('5003','Shard - MR','Magic Resist') --Definite
INSERT INTO [ref].[Lu_Runes] VALUES 
('5002','Shard - AR','Armour') --Definite
INSERT INTO [ref].[Lu_Runes] VALUES 
('5007','Shard - CD','Ability Haste') --Definite
INSERT INTO [ref].[Lu_Runes] VALUES 
('5001','Shard - HP','Health') --Definite

GO


